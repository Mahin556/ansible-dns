//
// named.conf
//
// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS
// server as a caching only nameserver (as a localhost DNS resolver only).
//
// See /usr/share/doc/bind*/sample/ for example named configuration files.
//

options {
	listen-on port {{ listening_port }} { {% for interfaces in ipv4_interfaces %}{{ interfaces }}; {% endfor %}};
	listen-on-v6 port {{ listening_port }} { {% for interfaces in ipv6_interfaces %}{{ interfaces }}; {% endfor %}};
	directory 	"{{ zone_directory }}";
	dump-file 	"/var/named/data/cache_dump.db";
	statistics-file "/var/named/data/named_stats.txt";
	memstatistics-file "/var/named/data/named_mem_stats.txt";
	secroots-file	"/var/named/data/named.secroots";
	recursing-file	"/var/named/data/named.recursing";
{% if allow_query_global is defined and allow_query_global | length > 0 %}
	allow-query     { {% for item in allow_query_global %}{{ item }}; {% endfor %}};
{% endif %}
{% if allow_transfer_global is defined and allow_transfer_global | length > 0 %}	
	allow-transfer  { {% for item in allow_transfer_global %}{{ item }}; {% endfor %}};
{% endif %}
{% if notify_global is defined and notify_global | length > 0 %}
        notify  {{ notify_global }}; 
{% endif %}
	
	/* 
	 - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
	 - If you are building a RECURSIVE (caching) DNS server, you need to enable 
	   recursion. 
	 - If your recursive DNS server has a public IP address, you MUST enable access 
	   control to limit queries to your legitimate users. Failing to do so will
	   cause your server to become part of large scale DNS amplification 
	   attacks. Implementing BCP38 within your network would greatly
	   reduce such attack surface 
	*/
	recursion {{ recursive }};
{% if allow_resursion is defined and allow_resursion | length > 0 %}
        allow-recursion { {% for item in allow_resursion %}{{ item }}; {% endfor %}};
{% endif %}
		
	dnssec-validation yes;

	managed-keys-directory "/var/named/dynamic";
	geoip-directory "/usr/share/GeoIP";

	pid-file "/run/named/named.pid";
	session-keyfile "/run/named/session.key";

	/* https://fedoraproject.org/wiki/Changes/CryptoPolicy */
	include "/etc/crypto-policies/back-ends/bind.config";
};

logging {
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};

zone "." IN {
	type hint;
	file "named.ca";
};

{% if frw_zones is defined %}
{% for zone in frw_zones %}
zone "{{ zone.name }}" IN {
	type {{ zone.type }};
	file "{{ zone.name }}-forward";
{% if zone.notify_on is defined and zone.notify_on | length > 0 %}
        notify {{ zone.notify_on }};
{% endif %}
{% if zone.allow_query is defined and zone.allow_query | length > 0 %}
        allow-query { {% for item in zone.allow_query %}{{ item }}; {% endfor %}};
{% endif %}
{% if zone.allow_transfer is defined and zone.allow_transfer | length > 0 %} 
	allow-transfer { {% for item in zone.allow_transfer %}{{ item }}; {% endfor %}}; 
{% endif %}
{% if zone.also_notify is defined and zone.also_notify | length > 0 %}
        also-notify { {% for item in zone.also_notify %}{{ item }}; {% endfor %}};
{% endif %}

}; 

{% endfor %}
{% endif %}

{% if rvs_zones is defined %}
{% for zone in rvs_zones %}
zone "{{ zone.name }}" IN {
        type {{ zone.type }};
        file "{{ zone.name }}-reverse";
{% if zone.notify_on is defined and zone.notify_on | length > 0 %}
        notify {{ zone.notify_on }};
{% endif %}
{% if zone.allow_query is defined and zone.allow_query | length > 0 %}
        allow-query { {% for item in zone.allow_query %}{{ item }}; {% endfor %}};
{% endif %}
{% if zone.allow_transfer is defined and zone.allow_transfer | length > 0 %}
        allow-transfer { {% for item in zone.allow_transfer %}{{ item }}; {% endfor %}};
{% endif %}
{% if zone.also_notify is defined and zone.also_notify | length > 0 %}
        also-notify { {% for item in zone.also_notify %}{{ item }}; {% endfor %}};
{% endif %}

};

{% endfor %}
{% endif %}

include "/etc/named.rfc1912.zones";
include "/etc/named.root.key";

